name: run_tests

on:
  pull_request:
  push:
    branches: [main]


# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true


jobs:
  unittest:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.12"]
        include:
          - subset-name: "Numerical Steady State Tests"
            test-subset: |
              tests/test_model.py::test_numerical_steady_state
          - subset-name: "Model Tests"
            test-subset: |
              tests/test_model.py \
              --ignore tests/test_model.py::test_numerical_steady_state
          - subset-name: "Steady State Tests"
            test-subset: |
              tests/test_steady_state.py
          - subset-name: "Perturbation Tests"
            test-subset: |
              tests/test_perturbation.py
          - subset-name: "Other Tests"
            test-subset: |
              tests/ \
              --ignore tests/test_model.py \
              --ignore tests/test_steady_state.py \
              --ignore tests/test_perturbation.py

    runs-on: ${{ matrix.os }}

    env:
      TEST_SUBSET: ${{ matrix.test-subset }}

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v4

    - uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: conda_envs/geconpy_test.yml
        create-args: >-
          python=${{matrix.python-version}}
        environment-name: geconpy-test
        init-shell: bash
        cache-environment: true

    - name: Install current branch
      run: |
        conda activate geconpy-test
        pip install -e .
        python --version

    - name: Run tests
      run: |
        python -m pytest -vv --cache-clear --cov=gEconpy --cov-report=xml --no-cov-on-fail --cov-report term $TEST_SUBSET

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # use token for more robust uploads
        env_vars: TEST_SUBSET
        name: ${{ matrix.os }}
        fail_ci_if_error: false
        verbose: true
