tryreduce
{
	U[], TC[], Div[];
};


block STEADY_STATE
{
    identities
    {
        A[ss] = 1;
        mc[ss] = 1;
        r[ss] = (1 / beta - (1 - delta));
        w[ss] = (1 - alpha) * (alpha / r[ss]) ^ (alpha / (1 - alpha));
        Y[ss] = (r[ss] / (r[ss] - delta * alpha)) ^ (sigma_C / (sigma_C + sigma_L)) *
            (w[ss] * (w[ss] / (1 - alpha)) ^ sigma_L) ^ (1 / (sigma_C + sigma_L));

        I[ss] = (delta * alpha / r[ss]) * Y[ss];
        C[ss] = Y[ss] ^ (-sigma_L / sigma_C) * ((1 - alpha) ^ (-sigma_L) * w[ss] ^ (1 + sigma_L)) ^ (1 / sigma_C);
        K[ss] = alpha * Y[ss] * mc[ss] / r[ss];
        L[ss] = (1 - alpha) * Y[ss] * mc[ss] / w[ss];

        U[ss] = (1 / (1 - beta)) * (C[ss] ^ (1 - sigma_C) / (1 - sigma_C) - L[ss] ^ (1 + sigma_L) / (1 + sigma_L));
        lambda[ss] = C[ss] ^ (-sigma_C);
        TC[ss] = -(r[ss] * K[ss] + w[ss] * L[ss]);
        Div[ss] = 0;
    };
};


block HOUSEHOLD
{
	definitions
	{
		u[] = (C[] ^ (1 - sigma_C) / (1 - sigma_C) - L[] ^ (1 + sigma_L) / (1 + sigma_L));
	};

	controls
	{
		C[], L[], I[], K[];
	};

	objective
	{
		U[] = u[] + beta * E[][U[1]];
	};

	constraints
	{
		C[] + I[] = r[] * K[-1] + w[] * L[] : lambda[];
		K[] = (1 - delta) * K[-1] + I[];
	};

	calibration
	{
		beta  = 0.99;
		delta = 0.02;

		sigma_C ~ N(loc=2.0, scale=2.0, lower=1.0) = 1.5;
		sigma_L ~ N(loc=2.0, scale=2.0, lower=1.0) = 2.0;
	};
};

block FIRM
{
    controls
    {
        K[-1], L[];
    };

    objective
    {
        TC[] = -(r[] * K[-1] + w[] * L[]);
    };

    constraints
    {
        Y[] = A[] * K[-1] ^ alpha * L[] ^ (1 - alpha) : mc[];
    };

    identities
    {
        # Perfect competition
        mc[] = 1;
    };

    calibration
    {
		alpha ~ Beta(alpha=2, beta=5) = 0.35;
    };
};

block TECHNOLOGY_SHOCKS
{
    identities
    {
        log(A[]) = rho_A * log(A[-1]) + epsilon_A[];
    };

    shocks
    {
        epsilon_A[];
    };

    calibration
    {
		rho_A ~ Beta(mean=0.95, sd=0.04) = 0.95;
    };
};
