assumptions
{
	positive
	{
		Y[], K[], C_NR[], C_R[],
		w[], r[], mc_L[],
		L[], L_NR[], L_R[],
		TFP[],
		alpha, alpha_L, beta, sigma_C, sigma_L, delta;
	};
};

tryreduce
{
	U_NR[], U_R[], TC[];
};

block STEADY_STATE
{
	definitions
	{
	    # Capital/Labor ratio, N = K/L
		N[ss] = (alpha * TFP[ss] / r[ss]) ^ (1 / (1 - alpha));

	};
	identities
	{
		TFP[ss] = 1.0;
		shock_beta_R[ss] = 1.0;

		r[ss] = 1 / beta - (1 - delta);
		w[ss] = (1 - alpha) * N[ss] ^ alpha;

		C_R[ss] = (w[ss] / Theta_R) ^ (1 / sigma_R);
		C_NR[ss] = (w[ss] / Theta_N) ^ (1 / sigma_N);

		C[ss] = omega * C_R[ss] + (1 - omega) * C_NR[ss];
        L[ss] = C[ss] / (N[ss] ^ alpha - delta * N[ss]);
        L_NR[ss] = C_NR[ss] / w[ss];
        L_R[ss] = (L[ss] - (1 - omega) * L_NR[ss]) / omega;

        K[ss] = N[ss] * L[ss];
        I[ss] = delta * K[ss];
        Y[ss] = C[ss] + I[ss];

		lambda_R[ss] = C_R[ss] ^ -sigma_R;
		lambda_NR[ss] = C_NR[ss] ^ -sigma_N;
		q[ss] = lambda_R[ss];
	};
};

block RICARDIAN_HOUSEHOLD
{
	definitions
	{
		u_R[] = shock_beta_R[] * (C_R[] ^ (1 - sigma_R) / (1 - sigma_R) - Theta_R * L_R[]);
	};

	controls
	{
		C_R[], L_R[], I[], K[];
	};

	objective
	{
		U_R[] = u_R[] + beta * E[][U_R[1]];
	};

	constraints
	{
		@exclude
		C_R[] + I[] = r[] * K[-1] + w[] * L_R[] : lambda_R[];

		K[] = (1 - delta) * K[-1] + I[]: q[];
	};

	identities
	{
		log(shock_beta_R[]) = rho_beta_R * log(shock_beta_R[-1]) + epsilon_beta_R[];
	};

	shocks
	{
		epsilon_beta_R[];
	};

	calibration
	{
		beta  ~ Beta(alpha=70, beta=4) = 0.99;
		delta ~ Beta(alpha=2, beta=42) = 0.02;
		sigma_R ~ Gamma(alpha=7, beta=3) = 1.5;
		Theta_R ~ Gamma(alpha=7, beta=3) = 1.0;
		rho_beta_R  ~ Beta(mean=0.95, sd=0.04) = 0.95;
	};
};

block NON_RICARDIAN_HOUSEHOLD
{
	definitions
	{
		u_NR[] = C_NR[] ^ (1 - sigma_N) / (1 - sigma_N) - Theta_N * L_NR[];
	};

	controls
	{
		C_NR[], L_NR[];
	};

	objective
	{
		U_NR[] = u_NR[] + beta * E[][U_NR[1]];
	};

	constraints
	{
		C_NR[] = w[] * L_NR[]: lambda_NR[];
	};

	calibration
	{
	    Theta_N ~ Gamma(alpha=7, beta=3) = 1.0;
        sigma_N ~ Gamma(alpha=7, beta=3) = 1.5;
	};
};


block FIRM
{
    controls
    {
        K[-1], L[];
    };

    objective
    {
        TC[] = -(r[] * K[-1] + w[] * L[]);
    };

    constraints
    {
		Y[] = TFP[] * K[-1] ^ alpha * L[] ^ (1 - alpha) : mc[];
    };

    identities
    {
        # Perfect competition
        mc[] = 1;

		# Exogenous technology process
		log(TFP[]) = rho_TFP * log(TFP[-1]) + epsilon_TFP[];
    };

    shocks
    {
        epsilon_TFP[];
    };

    calibration
    {
        alpha ~ Beta(alpha=2, beta=5) = 0.35;
		rho_TFP ~ Beta(mean=0.95, sd=0.04) = 0.95;
    };
};

block EQULIBRIUM
{
	identities
	{
		Y[] = C[] + I[];
		L[] = omega * L_R[] + (1 - omega) * L_NR[];
		C[] = omega * C_R[] + (1 - omega) * C_NR[];
	};

	calibration
	{
	    omega ~ Beta(alpha=2, beta=2) = 0.5;
	};
};
